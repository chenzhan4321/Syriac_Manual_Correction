{"ast":null,"code":"import React,{useState}from'react';import axios from'axios';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";function WordParser(_ref){let{paragraphId,paragraph}=_ref;const words=paragraph.split(' ');const[parsings,setParsings]=useState(words.map(()=>({partOfSpeech:'',gender:'',number:'',person:'',tense:'',stamm:''})));const handleChange=(index,field,value)=>{const newParsings=[...parsings];newParsings[index]={...newParsings[index],[field]:value};setParsings(newParsings);};const handleSubmit=async e=>{e.preventDefault();try{await Promise.all(parsings.map((parsing,index)=>axios.post('/api/parse',{id:paragraphId,wordIndex:index,parsing})));alert('All words parsed successfully!');}catch(error){console.error('Error parsing words:',error);}};return/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[words.map((word,index)=>/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h3\",{children:word}),/*#__PURE__*/_jsxs(\"select\",{value:parsings[index].partOfSpeech,onChange:e=>handleChange(index,'partOfSpeech',e.target.value),children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Part of Speech\"}),/*#__PURE__*/_jsx(\"option\",{value:\"noun\",children:\"Noun\"}),/*#__PURE__*/_jsx(\"option\",{value:\"verb\",children:\"Verb\"})]}),parsings[index].partOfSpeech==='noun'&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"select\",{value:parsings[index].gender,onChange:e=>handleChange(index,'gender',e.target.value),children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Gender\"}),/*#__PURE__*/_jsx(\"option\",{value:\"masculine\",children:\"Masculine\"}),/*#__PURE__*/_jsx(\"option\",{value:\"feminine\",children:\"Feminine\"})]}),/*#__PURE__*/_jsxs(\"select\",{value:parsings[index].number,onChange:e=>handleChange(index,'number',e.target.value),children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Number\"}),/*#__PURE__*/_jsx(\"option\",{value:\"singular\",children:\"Singular\"}),/*#__PURE__*/_jsx(\"option\",{value:\"plural\",children:\"Plural\"})]})]}),parsings[index].partOfSpeech==='verb'&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"select\",{value:parsings[index].person,onChange:e=>handleChange(index,'person',e.target.value),children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Person\"}),/*#__PURE__*/_jsx(\"option\",{value:\"1st\",children:\"1st\"}),/*#__PURE__*/_jsx(\"option\",{value:\"2nd\",children:\"2nd\"}),/*#__PURE__*/_jsx(\"option\",{value:\"3rd\",children:\"3rd\"})]}),/*#__PURE__*/_jsxs(\"select\",{value:parsings[index].number,onChange:e=>handleChange(index,'number',e.target.value),children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Number\"}),/*#__PURE__*/_jsx(\"option\",{value:\"singular\",children:\"Singular\"}),/*#__PURE__*/_jsx(\"option\",{value:\"plural\",children:\"Plural\"})]}),/*#__PURE__*/_jsxs(\"select\",{value:parsings[index].tense,onChange:e=>handleChange(index,'tense',e.target.value),children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Tense\"}),/*#__PURE__*/_jsx(\"option\",{value:\"perfect\",children:\"Perfect\"}),/*#__PURE__*/_jsx(\"option\",{value:\"imperfect\",children:\"Imperfect\"})]}),/*#__PURE__*/_jsxs(\"select\",{value:parsings[index].stamm,onChange:e=>handleChange(index,'stamm',e.target.value),children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Stamm\"}),/*#__PURE__*/_jsx(\"option\",{value:\"peal\",children:\"Peal\"}),/*#__PURE__*/_jsx(\"option\",{value:\"pael\",children:\"Pael\"})]})]})]},index)),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Submit All Parsings\"})]});}export default WordParser;","map":{"version":3,"names":["React","useState","axios","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","WordParser","_ref","paragraphId","paragraph","words","split","parsings","setParsings","map","partOfSpeech","gender","number","person","tense","stamm","handleChange","index","field","value","newParsings","handleSubmit","e","preventDefault","Promise","all","parsing","post","id","wordIndex","alert","error","console","onSubmit","children","word","onChange","target","type"],"sources":["/Users/zhanchen/Library/CloudStorage/Dropbox/Projects/Syriac_Manual/frontend/src/components/WordParser.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\nfunction WordParser({ paragraphId, paragraph }) {\n  const words = paragraph.split(' ');\n  const [parsings, setParsings] = useState(words.map(() => ({\n    partOfSpeech: '',\n    gender: '',\n    number: '',\n    person: '',\n    tense: '',\n    stamm: '',\n  })));\n\n  const handleChange = (index, field, value) => {\n    const newParsings = [...parsings];\n    newParsings[index] = { ...newParsings[index], [field]: value };\n    setParsings(newParsings);\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      await Promise.all(parsings.map((parsing, index) => \n        axios.post('/api/parse', {\n          id: paragraphId,\n          wordIndex: index,\n          parsing,\n        })\n      ));\n      alert('All words parsed successfully!');\n    } catch (error) {\n      console.error('Error parsing words:', error);\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      {words.map((word, index) => (\n        <div key={index}>\n          <h3>{word}</h3>\n          <select\n            value={parsings[index].partOfSpeech}\n            onChange={(e) => handleChange(index, 'partOfSpeech', e.target.value)}\n          >\n            <option value=\"\">Part of Speech</option>\n            <option value=\"noun\">Noun</option>\n            <option value=\"verb\">Verb</option>\n          </select>\n          {parsings[index].partOfSpeech === 'noun' && (\n            <>\n              <select\n                value={parsings[index].gender}\n                onChange={(e) => handleChange(index, 'gender', e.target.value)}\n              >\n                <option value=\"\">Gender</option>\n                <option value=\"masculine\">Masculine</option>\n                <option value=\"feminine\">Feminine</option>\n              </select>\n              <select\n                value={parsings[index].number}\n                onChange={(e) => handleChange(index, 'number', e.target.value)}\n              >\n                <option value=\"\">Number</option>\n                <option value=\"singular\">Singular</option>\n                <option value=\"plural\">Plural</option>\n              </select>\n            </>\n          )}\n          {parsings[index].partOfSpeech === 'verb' && (\n            <>\n              <select\n                value={parsings[index].person}\n                onChange={(e) => handleChange(index, 'person', e.target.value)}\n              >\n                <option value=\"\">Person</option>\n                <option value=\"1st\">1st</option>\n                <option value=\"2nd\">2nd</option>\n                <option value=\"3rd\">3rd</option>\n              </select>\n              <select\n                value={parsings[index].number}\n                onChange={(e) => handleChange(index, 'number', e.target.value)}\n              >\n                <option value=\"\">Number</option>\n                <option value=\"singular\">Singular</option>\n                <option value=\"plural\">Plural</option>\n              </select>\n              <select\n                value={parsings[index].tense}\n                onChange={(e) => handleChange(index, 'tense', e.target.value)}\n              >\n                <option value=\"\">Tense</option>\n                <option value=\"perfect\">Perfect</option>\n                <option value=\"imperfect\">Imperfect</option>\n              </select>\n              <select\n                value={parsings[index].stamm}\n                onChange={(e) => handleChange(index, 'stamm', e.target.value)}\n              >\n                <option value=\"\">Stamm</option>\n                <option value=\"peal\">Peal</option>\n                <option value=\"pael\">Pael</option>\n              </select>\n            </>\n          )}\n        </div>\n      ))}\n      <button type=\"submit\">Submit All Parsings</button>\n    </form>\n  );\n}\n\nexport default WordParser;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}